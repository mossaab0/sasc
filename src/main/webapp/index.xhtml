<?xml version='1.0' encoding='UTF-8' ?>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml"
      xmlns:h="http://java.sun.com/jsf/html"
      xmlns:p="http://primefaces.org/ui"
      xmlns:f="http://java.sun.com/jsf/core"
      xmlns:c="http://java.sun.com/jsp/jstl/core"
      xmlns:ui="http://xmlns.jcp.org/jsf/facelets">
    <h:head>
        <title>Search in Secrets</title>
        <script src="resources/jquery.easing.js" type="text/javascript"></script>
        <script src="resources/jqueryFileTree.js" type="text/javascript"></script>
        <link href="resources/jqueryFileTree.css" rel="stylesheet" type="text/css" media="screen" />
        <style>
            .ui-widget {font-size: 1em !important}
            .ui-menu .ui-menu-parent .ui-menu-child {white-space:nowrap; width: auto}
            .ui-menubar .ui-menu-child .ui-menuitem-link {width: 100%}
            .ui-layout-north {
                z-index:20 !important;
                overflow:visible !important;
            }

            .ui-layout-north .ui-layout-unit-content {
                overflow:visible !important;
            }

            .ui-fileupload-content {
                display: none;
            }

            .ui-fileupload-buttonbar {
                padding: 0 !important;
                width: auto !important;
            }

            .ui-fileupload-choose {
                margin: 0 !important;
            }

            .ui-fileupload {
                float: left !important;
            }

            .ui-fileupload-buttonbar {
                margin: 0 !important;
            }

            .ui-button-text-only .ui-button-text {
                padding: 0.3em;
            }

            .ui-button {
                margin: 0;
            }

            .inactive {
                background: #c4c4c4 -webkit-gradient(linear,left top,left bottom,from(rgba(255,255,255,0.8)),to(rgba(255,255,255,0))) !important;
                border: 1px solid #a8a8a8 !important;
            }

            .email {
                margin-right: 5px;
            }

            .ui-widget-content .ui-state-highlight .email {
                color: #fff;
            }
        </style>
    </h:head>
    <h:body>
        <p:growl id="growl"/>
        <p:ajaxStatus onstart="startHandler()" oncomplete="endHandler()"/>  
        <script>
            var ajaxInProgress;
            function startHandler() {
                ajaxInProgress = setTimeout(function () {
                    PF('statusDialog').show();
                }, 200);
            }
            function endHandler() {
                clearTimeout(ajaxInProgress);
                PF('statusDialog').hide();
                ajaxInProgress = null;
            }
            function showBrowser() {
                $('#browser').
                        fileTree({root: '/', script: 'jqueryFileTree.jsp'},
                                function (file) {
                                    $('#selected').val(file);
                                    PF('selectedPanel').show();
                                });
                PF('browserDialog').show();
            }
        </script>
        <p:dialog modal="true" widgetVar="statusDialog" showHeader="false" draggable="false" closable="false" resizable="false">
            <p:graphicImage url="resources/ajax-loader.gif" />
        </p:dialog>
        <p:dialog header="Select .mbox file" widgetVar="browserDialog" modal="true" height="400px" width="600px">
            <p:panel widgetVar="selectedPanel" visible="false">
                <h:form prependId="false">
                    <p:inputText id="selected" value="#{applicationBean.mboxPath}" placeholder="Mbox path"/>
                    <p:commandButton value="Index" onclick="PF('browserDialog').hide(); PF('progressPanel').show(); PF('pbAjax').start();" global="false" update="center body">
                        <f:actionListener binding="#{applicationBean.indexMbox()}"/>
                        <f:actionListener binding="#{lazyView.submit()}"/>
                    </p:commandButton>
                    <p:commandButton value="Cancel" type="button" onclick="PF('browserDialog').hide()"/>
                </h:form>
            </p:panel>
            <p:separator/>
            <div id="browser"/>
        </p:dialog>
        <p:dialog widgetVar="helpDialog" header="Help" modal="true" width="50%">
            <ul>
                <li>
                    This application allows you to annotate your personal email collection that you plan
                    to release or share in order to protect some sensitive data.</li>
                <li>
                    The first stage is to index an existing mbox file
                    (e.g., you can get Gmail emails from
                    <a href="https://takeout.google.com/settings/takeout" target="_blank">here</a>).
                    If this option (under the menu Collection) is disabled,
                    this typically means that the index has already been created.
                </li>
                <li>
                    A default sensitivity type is already created for you.
                    If you are concerned about more than one type,
                    you can create / load them from the Model menu.
                    The annotations and models are attached to a specific sensitivity type.
                </li>
                <li>
                    To search for sensitive content, you can use issue a query through the search box,
                    or select a list of words from the ePadd Word List.
                    The results are, then, sorted by the retrieval score.
                    You can annotate for protection or release,
                    or remove an existing annotation.
                </li>
                <li>
                    Under the Model menu,
                    you can train a classifier based on the annotations you have
                    already made, load/export a pre-trained model,
                    or let the classifier guide your annotations through active learning.
                    You can also generate predictions of the sensitivity of your emails.
                    Note that both prediction and active learning are lengthy processes,
                    as the classifier is applied to your entire collection of emails.
                    Finally, you can estimate the quality of the classifier model
                    with 10-folds cross validation.
                </li>
                <li>
                    Your annotations are immediately persisted into disk.
                    You can review them under the Corpora menu even after
                    restarting the application.
                </li>
            </ul>
        </p:dialog>
        <p:dialog showHeader="false" widgetVar="progressPanel" modal="true" height="21px" width="600px" resizable="false" draggable="false">
            <p:progressBar widgetVar="pbAjax" ajax="true" value="#{applicationBean.progress}" labelTemplate="{value}%" styleClass="animated" global="false">
                <p:ajax event="complete" update="growl menubar tableform body" oncomplete="PF('progressPanel').hide()"/>
            </p:progressBar>
        </p:dialog>
        <p:dialog header="Cross Validation Effectiveness" widgetVar="cvDialog" dynamic="true" resizable="false">
            <h:outputText value="#{applicationBean.crossValidation}"/>
        </p:dialog>
        <p:dialog id="themeDialog" header="New Sensitivity Type" widgetVar="themeDialog" dynamic="true" resizable="false">
            <h:form prependId="false">
                <p:inputText id="themeName" widgetVar="themeName" value="#{applicationBean.themeReplacement}" placeholder="Theme Name" validatorMessage="Please enter only alphanumerical characters or spaces">
                    <f:validateRegex pattern="^[0-9a-zA-Z]+[0-9a-zA-Z ]*$"/>
                </p:inputText>
                <p:commandButton value="Create" update="tableform body growl menubar" oncomplete="$('#themeName').val(''); PF('themeDialog').hide()">
                    <f:actionListener binding="#{applicationBean.newAnnotations()}"/>
                    <f:actionListener binding="#{lazyView.submit()}"/>
                </p:commandButton>
            </h:form>
        </p:dialog>
        <p:layout fullPage="true">
            <p:layoutUnit position="north" size="310">
                <h:form prependId="false">  
                    <p:growl id="messages"/>
                    <p:menubar id="menubar">
                        <p:submenu label="Corpora">
                            <p:menuitem value="Index Mbox" onclick="showBrowser()" disabled="#{!applicationBean.indexingEnabled || applicationBean.indexExists}"/>
                            <p:menuitem value="Review" actionListener="#{lazyView.submit}" update="tableform body" rendered="#{applicationBean.indexExists}"/>
                        </p:submenu>
                        <p:submenu label="Model" rendered="#{applicationBean.indexExists}">
                            <p:menuitem value="New Sensitivity Type" onclick="PF('themeDialog').show()"/>
                            <p:submenu label="Load Sensitivity Type" rendered="#{!applicationBean.themes.isEmpty()}">
                                <c:forEach var="theme" items="#{applicationBean.themes}">
                                    <p:menuitem value="#{theme}" update="tableform body menubar">
                                        <f:actionListener binding="#{applicationBean.loadAnnotations(theme)}"/>
                                        <f:actionListener binding="#{lazyView.submit()}"/>
                                    </p:menuitem>
                                </c:forEach>
                            </p:submenu>
                            <p:menuitem value="Train" actionListener="#{applicationBean.train}" disabled="#{!applicationBean.trainingEnabled}" update="menubar"/>
                            <p:menuitem value="Predict" actionListener="#{lazyView.predict}" onclick="PF('progressPanel').show(); PF('pbAjax').start();" update="tableform body" disabled="#{!applicationBean.predictionEnabled}" global="false"/>
                            <p:menuitem value="Active Learning" actionListener="#{lazyView.activeLearning}" onclick="PF('progressPanel').show(); PF('pbAjax').start();" update="tableform body" global="false"/>
                            <p:menuitem value="Export" ajax="false" disabled="#{!applicationBean.predictionEnabled}">
                                <p:fileDownload value="#{applicationBean.file}" />
                            </p:menuitem>
                            <p:menuitem value="Cross Validation" onclick="PF('cvDialog').show()"/>
                        </p:submenu>
                        <p:submenu label="ePadd Word List" rendered="#{applicationBean.indexExists}">
                            <c:forEach var="lexicon" items="#{applicationBean.lexicons}">
                                <p:submenu label="#{lexicon.key}">
                                    <c:forEach var="list" items="#{lexicon.value}">
                                        <p:menuitem value="#{list.key}" title="#{list.value}" actionListener="#{lazyView.filter(list.value)}" update="tableform body"/>
                                    </c:forEach>
                                </p:submenu>
                            </c:forEach>
                        </p:submenu>
                        <p:menuitem value="Help" onclick="PF('helpDialog').show()"/>
                        <f:facet name="options">
                            <h:outputText value="Sensitivity Type: #{applicationBean.theme}" style="float: left; padding: .3em 1em; font-weight: bold" rendered="#{applicationBean.indexExists}"/>
                            <p:fileUpload fileUploadListener="#{applicationBean.uploadModel}" auto="true" label="Import Model" update="messages menubar" rendered="#{applicationBean.indexExists}"/>
                            <p:inputText value="#{lazyView.query}" placeholder="Search" rendered="#{applicationBean.indexExists}"/>
                            <p:commandButton icon="ui-icon-search" actionListener="#{lazyView.submit}" update="tableform body" rendered="#{applicationBean.indexExists}"/>
                        </f:facet>
                    </p:menubar>
                </h:form>
                <h:form id="tableform">
                    <p:dataTable var="email" value="#{lazyView.lazyModel}" paginator="true" rows="10" paginatorPosition="bottom"
                                 paginatorTemplate="{RowsPerPageDropdown} {FirstPageLink} {PreviousPageLink} {CurrentPageReport} {NextPageLink} {LastPageLink}"
                                 rowsPerPageTemplate="10,25,100" selectionMode="single" selection="#{lazyView.selectedEmail}" id="emailTable" lazy="true"
                                 scrollable="true" scrollHeight="200" rendered="#{applicationBean.indexExists}">
                        <p:ajax event="rowSelect" listener="#{lazyView.onRowSelect}" update="body"/>
                        <p:column headerText="Assessment" style="width: 132px; padding: 0; font-size: 0.95em">
                            <p:selectBooleanButton value="#{email.protect}" onLabel="Protect" offLabel="Protect" styleClass="#{email.styleClass}">
                                <p:ajax update="growl tableform body" listener="#{lazyView.updateAnnotations(email)}" />
                            </p:selectBooleanButton>
                            <p:selectBooleanButton value="#{email.release}" onLabel="Release" offLabel="Release" styleClass="#{email.styleClass}">
                                <p:ajax update="growl tableform body" listener="#{lazyView.updateAnnotations(email)}" />
                            </p:selectBooleanButton>
                        </p:column>
                        <p:column headerText="Score" sortBy="#{email.score}" width="10%">
                            <h:outputText value="#{email.score}"/>
                        </p:column>
                        <p:column headerText="From" sortBy="#{email.from}" width="20%">
                            <h:outputText value="#{email.from.left}" title="#{email.from.right}" styleClass="email"/>
                        </p:column>
                        <p:column headerText="Subject" sortBy="#{email.subject}" width="50%">
                            <h:outputText value="#{email.subject}"/>
                        </p:column>
                        <p:column headerText="Date" sortBy="#{email.date}" width="20%">
                            <h:outputText value="#{email.date}"/>
                        </p:column>
                    </p:dataTable>
                </h:form>
            </p:layoutUnit>
            <p:layoutUnit position="center" id="center">
                <h:panelGroup id="body" rendered="#{applicationBean.indexExists}">
                    <h:outputText value="To: " rendered="#{lazyView.selectedEmail.to.size()>0}" style="font-weight: bold"/>
                    <ui:repeat var="address" value="#{lazyView.selectedEmail.to}">
                        <p:commandLink value="#{address.left}" title="#{address.right}"
                                       actionListener="#{lazyView.searchEmail(address.left, address.left)}"
                                       update="tableform body" styleClass="email"/>
                    </ui:repeat>

                    <h:outputText value="Cc: " rendered="#{lazyView.selectedEmail.cc.size()>0}" style="font-weight: bold"/>
                    <ui:repeat var="address" value="#{lazyView.selectedEmail.cc}">
                        <p:commandLink value="#{address.left}" title="#{address.right}"
                                       actionListener="#{lazyView.searchEmail(address.left, address.left)}"
                                       update="tableform body" styleClass="email"/>
                    </ui:repeat>

                    <h:outputText value="Bcc: " rendered="#{lazyView.selectedEmail.bcc.size()>0}" style="font-weight: bold"/>
                    <ui:repeat var="address" value="#{lazyView.selectedEmail.bcc}">
                        <p:commandLink value="#{address.left}" title="#{address.right}"
                                       actionListener="#{lazyView.searchEmail(address.left, address.left)}"
                                       update="tableform body" styleClass="email"/>
                    </ui:repeat>
                    <p:separator rendered="#{lazyView.selectedEmail.to.size()>0 || lazyView.selectedEmail.cc.size()>0 || lazyView.selectedEmail.bcc.size()>0}"/>

                    <h:form>
                        <h:outputText value="Files: " rendered="#{lazyView.selectedEmail.files.size()>0}" style="font-weight: bold"/>
                        <ui:repeat var="file" value="#{lazyView.selectedEmail.files}">
                            <p:commandLink value="#{file.name}" title="#{file.size}" styleClass="email" ajax="false">
                                <p:fileDownload value="#{file.download}"/>
                            </p:commandLink>
                        </ui:repeat>
                    </h:form>
                    <p:separator rendered="#{lazyView.selectedEmail.files.size()>0}"/>

                    <h:outputText value="#{lazyView.selectedEmail.html}" rendered="#{lazyView.selectedEmail.html != null}" escape="false"/>
                    <h:outputText style="white-space: pre-wrap" value="#{lazyView.selectedEmail.body}" rendered="#{lazyView.selectedEmail.html == null}"/>
                </h:panelGroup>
            </p:layoutUnit>
        </p:layout>
    </h:body>
</html>
